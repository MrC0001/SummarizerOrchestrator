//- views/index.pug
extends layout

block content
  h1
    i.fas.fa-cogs(style="margin-right: 10px;")
    | Summarize a Transcript

  .container
    if error
      p.error-message= error

    //- Form for summarizing a transcript
    form(action="/summarizeAll" method="post")
      .form-group
        label(for="transcriptSelect") Select a Transcript:
        select(name="transcriptSelect" id="transcriptSelect" required aria-label="Select Transcript")
          option(value="" disabled selected) -- Select Transcript --
          each transcript in transcripts
            option(value=transcript.id)= `ID ${transcript.id} - ${transcript.scenario}`

      .form-group
        label(for="transcriptText") Transcript:
        textarea(name="transcript" id="transcriptText" rows="10" required aria-label="Transcript")
          | Select transcript from dropdown.

      button(type="submit" class="btn-submit") Summarize

    //- Form for calculating metrics
    form(action="/metrics/calculate" method="post" style="margin-top: 20px;")
      .form-group
        label(for="metricsTranscriptSelect") Select a Transcript for Metrics Calculation:
        select(name="transcriptId" id="metricsTranscriptSelect" required aria-label="Select Transcript for Metrics")
          option(value="" disabled selected) -- Select Transcript --

      button(type="submit" class="btn-submit") Calculate Metrics

  .link-group
    a(href="/new" class="btn-link") Create New Transcript
    a(href="/update" class="btn-link") Update Transcript
    a(href="/delete" class="btn-link") Delete Transcript
    a(href="/summaries" class="btn-link") Summaries and Metrics

  script.
    document.addEventListener('DOMContentLoaded', function () {
        try {
            const transcripts = !{JSON.stringify(transcripts)};
            const transcriptSelect = document.getElementById('transcriptSelect');
            const transcriptText = document.getElementById('transcriptText');
            const metricsTranscriptSelect = document.getElementById('metricsTranscriptSelect');
            
            // Clear dropdowns to avoid duplicates
            transcriptSelect.innerHTML = '<option value="" disabled selected>-- Select Transcript --</option>';
            metricsTranscriptSelect.innerHTML = '<option value="" disabled selected>-- Select Transcript --</option>';

            // Populate both dropdowns dynamically
            transcripts.forEach(t => {
                const transcriptOption = document.createElement('option');
                transcriptOption.value = t.id;
                transcriptOption.textContent = `ID ${t.id} - ${t.scenario}`;
                transcriptSelect.appendChild(transcriptOption);

                const metricsOption = document.createElement('option');
                metricsOption.value = t.id;
                metricsOption.textContent = `ID ${t.id} - ${t.scenario}`;
                metricsTranscriptSelect.appendChild(metricsOption);
            });

            // Autofill the transcript textarea on selection
            transcriptSelect.addEventListener('change', function () {
                const selectedId = parseInt(this.value);
                const selectedTranscript = transcripts.find(t => t.id === selectedId);

                if (selectedTranscript) {
                    transcriptText.value = selectedTranscript.transcript;
                } else {
                    transcriptText.value = '';
                }
            });
        } catch (error) {
            console.error("Error in dropdown and transcript handling script:", error);
        }
    });
